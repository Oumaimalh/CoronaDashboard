"0",""
"0","# Filter on deaths"
"0","df = df %>% filter(Confirmed > 50)"
"0",""
"0","# day number"
"0","df$day = as.integer(row.names(df))"
"0","df_degree = data.frame(n=NULL, aic=NULL)"
"0","for(i in 1:10){"
"0","  fit_tmp = lm(formula = Confirmed ~ day + I(day^i), data = df)"
"0","  df_degree = bind_rows(df_degree,data.frame(n=i, aic=extractAIC(fit_tmp)[2]))"
"0","}"
"0","degree = df_degree$n[df_degree$aic == min(df_degree$aic)]"
"0",""
"0","cat(""\n Degree selection :"", degree)"
"1","
 Degree selection :"
"1"," "
"1","2"
"0","fit = lm(formula = Confirmed ~ day + I(day^degree), data = df)"
"0",""
"0","# prediction period (5 days)"
"0","future = data.frame(day = c(1:(nrow(df)+5)))"
"0","future_df = future # CI"
"0","pred = predict(fit, newdata = future)"
"0",""
"0","# final dataframe"
"0","future = cbind(left_join(future, df, by=""day""),pred)"
"0",""
"0","# making final data"
"0","future$date = NA"
"0","date_debut = min(na.omit(future$ObservationDate)) - 1"
"2","no non-missing arguments to min; returning Inf"
"0","for(i in 1:nrow(future)){"
"0","  future$date[i] = as.character(date_debut + i)"
"0","}"
"0","future$date = ymd(future$date)"
"0","# Dataframe"
"0","future = future %>% select(date,  Confirmed,  pred) %>% mutate(  round('Prediction # conf',0))"
"2","Error in round(""Prediction # conf"", 0) : 
  non-numeric argument to mathematical function
"
