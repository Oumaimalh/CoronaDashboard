theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=30), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper+20)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower+5)
prediction50$Upper=round( prediction50$Upper+5)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=30), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower+5)
prediction50$Upper=round( prediction50$Upper+5)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=30), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower)
prediction50$Upper= round(prediction50$Upper)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower)
prediction50$Upper=round( prediction50$Upper)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.1) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower+20)
prediction$Upper= round(prediction$Upper+20)
prediction50$Prediction<- round(prediction50$Prediction+5)
prediction50$Lower= round(prediction50$Lower+5)
prediction50$Upper=round( prediction50$Upper+5)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
covid<-world
covid$ObservationDate <- as.Date(covid$ObservationDate, "%m/%d/%Y")
covid$Confirmed <- as.integer(as.character(covid$Confirmed))
covid$Deaths <- as.integer(as.character(covid$Deaths))
covid$Recovered <- as.integer(as.character(covid$Recovered))
covid_sp <- covid %>% filter(Country.Region=="Tunisia")
model_start_date <- covid_sp %>% filter(row_number()==1) %>% .$ObservationDate
covid_sp$Day <- c(-(min(which(covid_sp$ObservationDate>model_start_date))-1):0, 1:(nrow(covid_sp)-min(which(covid_sp$ObservationDate>model_start_date))))
forecast_days <-3
covid_sp <- merge(data.frame(Day=min(covid_sp$Day):max(covid_sp$Day)+forecast_days), covid_sp, by="Day", all=TRUE)
covid_sp$ObservationDate[which(is.na(covid_sp$ObservationDate))] <- covid_sp$ObservationDate[min(which(is.na(covid_sp$ObservationDate)))-1] + 1:forecast_days
library(drc)
model <- drm(formula=Confirmed~Day, data=covid_sp %>% filter(Day>=20), fct=L.3())
suppressWarnings({
prediction <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.95) %>% as.data.frame()
})
prediction <- prediction %>% mutate(Day=row_number()-1)
prediction$Date <- covid_sp$ObservationDate[match(prediction$Day, covid_sp$Day)]
suppressWarnings({
prediction50 <- predict(model, covid_sp %>% filter(Day>=0), interval="confidence", level=0.50) %>% as.data.frame()
})
prediction50 <- prediction50 %>% mutate(Day=row_number()-1)
prediction50$Date <- covid_sp$ObservationDate[match(prediction50$Day, covid_sp$Day)]
library(repr)
options(repr.plot.width=9, repr.plot.height=5)
fills <- c("CI95"="red", "IQR"="purple")
colors <- c("Prediction"="orange", "Data"="blue")
prediction$Prediction<-round(prediction$Prediction+20)
prediction$Lower=round(prediction$Lower+20)
prediction$Upper= round(prediction$Upper+20)
prediction50$Prediction<- round(prediction50$Prediction+20)
prediction50$Lower= round(prediction50$Lower+20)
prediction50$Upper=round( prediction50$Upper+20)
ggplot() +
geom_ribbon(data=tail(prediction, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="CI95") , alpha=0.2) +
geom_ribbon(data=tail(prediction50, forecast_days+1), aes(x=Date, ymin=Lower, ymax=Upper, fill="IQR"), alpha=0.2) +
geom_point(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, color="Prediction"), size=1) +
geom_text(data=tail(prediction, forecast_days) %>% head(3), aes(x=Date, y=Prediction, label=round(Prediction)), size=2.5) +
geom_line(data=covid_sp %>% filter(ObservationDate>="2020-03-04"), aes(x=ObservationDate, y=Confirmed, color="Data"), na.rm=TRUE) +
scale_fill_manual(values=fills, labels=c("95% CI", "IQR"), guide=guide_legend(title=NULL, order=2)) +
scale_color_manual(values=colors, guide=guide_legend(override.aes=list(shape=c(NA, 16), linetype=c("solid", "blank")), title=NULL, order=1)) +
scale_x_date(date_minor_breaks="1 days") +
scale_y_continuous(labels=scales::comma) +
theme_bw() +
theme(plot.caption=element_text(size=7), legend.justification="top") +
labs(x="Date", y="Total cases", title="Coronavirus in Tunisia", subtitle="Three-parameter logistic model.", caption="Data source: European Centre for Desease Prevention and Control")
runApp()
runApp()
runApp()
rsconnect::deployApp('C:/Users/asus/Desktop/Atelier1/Corona')
